	Input
	Store	cases
	Load	cases
	Subt	one
	Store	cases
/ -------- Bucle principal para procesar cada caso --------
while,	Clear                 
	Store	i
	Clear
	Store	max_value
loop,	Load	i
	Subt	cases
	Skipcond	800
	Jump	bodywhile
	Halt
/ -------- Leer número y preparar la secuencia de Collatz --------
bodywhile,	Input
	Store	num
	//Store	max_value
/ -------- Generar la secuencia de Collatz --------
while2,	Load	num
	Subt	one
	Skipcond	400
	Jump	bodywhile2
	Jump	endwhile2
/ -------- Verificar si el número es par o impar --------
bodywhile2, Load	max_value
	Skipcond	400		/ ¿max_value == 0?
	Jump	sigue		/ Si no es 0, salta
	Load	num
	Store	max_value	/ Si es 0, inicializa max_value = num
sigue,	Load	num
	Store	mod_a
	JnS	mod
	Store	remainder
	Skipcond	400
	Jump	else

/ -------- Si el número es par --------
	Load	num
	Store	div_a
	JnS	div
	Store	num
	Jump	while2
/ -------- Si el número es impar --------
else,	Load	num
	Store	mult_a
	JnS	mult
	Add	one
	Store	num

	Load	num
	Subt	max_value
	Skipcond	000
	Jump	ell
	Jump	while2
ell,	Load	num
	Store	max_value
	Jump	while2
/ -------- Fin de secuencia Collatz para un número --------
endwhile2,	Load	max_value
	Output
	Load	i
	Add	one
	Store	i
	Jump	loop 
/ -------- Variables --------
cases,	DEC	0
num,	DEC	0
remainder,  DEC	0
one,	DEC	1
i,	DEC	0
max_value,	DEC	0
/ -------- Subrutina: Módulo (num % 2) --------
mod,	DEC	0
mod_while,	Load	mod_a
	Subt	mod_two
	Skipcond	000
	Jump	mod_bodywhile
	Jump	mod_endwhile
mod_bodywhile,	Store	mod_a
	Jump	mod_while
mod_endwhile,	Load	mod_a
	JumpI	mod
mod_a,	DEC	0
mod_two,	DEC	2
/ -------- Subrutina: División (num / 2) --------
div,	DEC	0
	Clear
	Store	div_i
div_while,	Load	div_a
	Subt	div_two
	Skipcond	000
	Jump	div_bodywhile
	Jump	div_endwhile
div_bodywhile,	Store	div_a
	Load	div_i
	Add	div_one
	Store	div_i
	Jump	div_while
div_endwhile,	Load	div_i
	JumpI	div
div_a,	DEC	0
div_i,	DEC	0
div_one,	DEC	1
div_two,	DEC	2
/ -------- Subrutina: Multiplicación (num * 3) --------
mult,	DEC	0
	Load	mult_a
	Add	mult_a
	Add	mult_a
	JumpI	mult
mult_a,	DEC	0

